@echo off
REM –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è production-ready Docker –æ–±—Ä–∞–∑–∞ SayDeck
REM –î–ª—è AWS ECS Deploy

echo üöÄ Building SayDeck Production Docker Image...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env.aws —Ñ–∞–π–ª–∞
if not exist ".env.aws" (
    echo ‚ùå –§–∞–π–ª .env.aws –Ω–µ –Ω–∞–π–¥–µ–Ω!
    echo –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.aws —Å production –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    exit /b 1
)

REM –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑
echo üì¶ Building Docker image...
docker build -t saydeck:latest -f Dockerfile .

if %errorlevel% equ 0 (
    echo ‚úÖ Docker –æ–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!
    
    REM –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞
    echo üìä –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:
    docker images saydeck:latest
    
    echo.
    echo üß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞ –ª–æ–∫–∞–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:
    echo docker run -p 80:80 --env-file .env.aws saydeck:latest
    echo.
    echo üîó –î–ª—è –¥–µ–ø–ª–æ—è –≤ AWS ECS:
    echo 1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±—Ä–∞–∑ –≤ ECR (Amazon Elastic Container Registry^)
    echo 2. –û–±–Ω–æ–≤–∏—Ç–µ ECS Task Definition
    echo 3. –û–±–Ω–æ–≤–∏—Ç–µ ECS Service
) else (
    echo ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–∞!
    exit /b 1
)
